import os
import logging
from fastapi import FastAPI, Request
from aiogram import Bot, Dispatcher, types
from aiogram.types import Update
from aiogram.utils.executor import start_webhook

# ----------------------------
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
# ----------------------------
TOKEN = os.getenv("BOT_TOKEN")  # –¢–≤–æ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ Render Secret
WEBHOOK_HOST = os.getenv("RENDER_EXTERNAL_URL")  # Render —Å–∞–º –≤—ã–¥–∞—ë—Ç HTTPS-–¥–æ–º–µ–Ω
WEBHOOK_PATH = f"/webhook/{TOKEN}"
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

logging.basicConfig(level=logging.INFO)

# ----------------------------
# FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
# ----------------------------
app = FastAPI()


@app.on_event("startup")
async def on_startup():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±—Ö—É–∫ –≤ Telegram –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"""
    logging.info("Setting webhook to %s", WEBHOOK_URL)
    await bot.set_webhook(WEBHOOK_URL)


@app.on_event("shutdown")
async def on_shutdown():
    """–£–¥–∞–ª—è–µ–º –≤–µ–±—Ö—É–∫ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ"""
    logging.info("Deleting webhook")
    await bot.delete_webhook()


@app.post(WEBHOOK_PATH)
async def telegram_webhook(request: Request):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–ø–¥–µ–π—Ç–æ–≤ –æ—Ç Telegram"""
    data = await request.json()
    update = Update(**data)
    await dp.process_update(update)
    return {"ok": True}

# ----------------------------
# –•—ç–Ω–¥–ª–µ—Ä—ã –±–æ—Ç–∞
# ----------------------------

@dp.message_handler(commands=["start", "help"])
async def send_welcome(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –±–æ—Ç –Ω–∞ Render üöÄ")


@dp.message_handler(commands=["ping"])
async def ping(message: types.Message):
    await message.answer("Pong üèì")


@dp.message_handler()
async def echo(message: types.Message):
    await message.answer(f"–¢—ã –Ω–∞–ø–∏—Å–∞–ª: {message.text}")
